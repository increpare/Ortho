#!/usr/bin/env node

var fs 				= require('fs')
var glob 			= require('./js/orthoGlobals')
var canvasRender 	= require('./js/canvasRender')
var lib 			= require('./js/orthoLib')
var svgRender 		= require("./js/svgRender")
var reduce 			= require("./js/orthoReduce")
var log=console.log

if (process.argv.length===2){
	console.log("USAGE: reduce INPUT [OUTPUT]")
	return
}

var inputFileName=""
var outputFileName=""
for (var i=2;i<process.argv.length;i++){
	var t = process.argv[i]
	if (inputFileName===""){
		inputFileName=t
	} else if (outputFileName===""){
		outputFileName=t
	} else {
		console.log("Too many arguments. Unexpected argument \""+t+"\".")		
	}
}

if (inputFileName==="")
{
	console.log("need to supply input file")
}

if (outputFileName===""){
	var path = require('path');
	var globalPath = path.resolve(inputFileName)
	var parsed = path.parse(globalPath)
	parsed.ext=".json"
	parsed.dir+="/../json_contracted"
	parsed.base=parsed.name+"_contracted"+parsed.ext;
	outputFileName = path.format(parsed)
	log("outputFileName = "+outputFileName)
}



lib.loadFile(inputFileName)
var orig = JSON.stringify(glob.page)
var minarea=100000000;
var minpage="orig"
var maxarea=-100000000;
var maxpage="orig"
for (var i=0;i<100;i++){
	glob.page=JSON.parse(orig)
	reduce.Reduce();
	var area = lib.pageArea()
	if (area<minarea){
		minarea=area
		minpage=JSON.stringify(glob.page);
	}
	if (area>maxarea){
		maxarea=area
		maxpage=JSON.stringify(glob.page);
	}
	lib.shuffle()
}

log("MAX\n"+maxpage)
log("MIN\n"+minpage)

glob.page=JSON.parse(minpage)

lib.saveFile(outputFileName)
log("saved " + outputFileName)
