#!/usr/bin/env node

var fs = require('fs');
eval(fs.readFileSync('orthoGlobals.js')+'');
eval(fs.readFileSync('orthoRender.js')+'');
eval(fs.readFileSync('orthoLib.js')+'');
eval(fs.readFileSync('orthoTopology.js')+'');


if (process.argv.length===2){
	console.log("USAGE: retop INPUT [OUTPUT]");
	return;
}

var inputFileName=""
var outputFileName=""
for (var i=2;i<process.argv.length;i++){
	var t = process.argv[i];
	if (inputFileName===""){
		inputFileName=t;
		console.log("input file "+t)
	} else if (outputFileName===""){
		outputFileName=t;
	} else {
		console.log("Too many arguments. Unexpected argument \""+t+"\".");		
	}
}

if (inputFileName=="")
{
	console.log("need to supply input file");
}

if (outputFileName===""){
	outputFileName = inputFileName.substring(0, inputFileName.indexOf('.json'))+'_normalized.json'
}

loadFile(inputFileName)

var T = Topologize()
Instantiate(T)

saveFile(outputFileName)
console.log("generated "+ outputFileName);
