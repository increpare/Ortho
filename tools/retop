#!/usr/bin/env node

var fs = require('fs')
eval(fs.readFileSync('../ortho/www/js/orthoGlobals.js')+'')
eval(fs.readFileSync('../ortho/www/js/orthoRender.js')+'')
eval(fs.readFileSync('js/orthoLib.js')+'')
eval(fs.readFileSync('js/orthoTopology.js')+'')


if (process.argv.length===2){
	//log("USAGE: retop INPUT [OUTPUT]");
	return;
}

var inputFileName=""
var outputFileName=""
for (var i=2;i<process.argv.length;i++){
	var t = process.argv[i];
	if (inputFileName===""){
		inputFileName=t;
		//log("input file "+t)
	} else if (outputFileName===""){
		outputFileName=t;
	} else {
		//log("Too many arguments. Unexpected argument \""+t+"\".");		
	}
}

if (inputFileName=="")
{
	//log("need to supply input file");
}

if (outputFileName===""){
	var path = require('path');
	var globalPath = path.resolve(inputFileName)
	var parsed = path.parse(globalPath)
	parsed.ext=".json"
	parsed.dir+="/../retop"
	parsed.base=parsed.name+"_retop"+parsed.ext;
	outputFileName = path.format(parsed)
	log("outputFileName = "+outputFileName)
}

loadFile(inputFileName)

var T = Topologize()
Instantiate(T)

saveFile(outputFileName)
//log("generated "+ outputFileName);
