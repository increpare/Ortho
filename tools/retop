#!/usr/bin/env node

var fs = require('fs')
var glob = require('./js/app/orthoGlobals')
var lib = require('./js/orthoLib')
var top = require('./js/orthoTopology')
var orthoRender = require("./js/app/orthoRender")
var log = console.log


if (process.argv.length===2){
	log("USAGE: retop INPUT [OUTPUT]");
	return;
}

var inputFileName=""
var outputFileName=""
for (var i=2;i<process.argv.length;i++){
	var t = process.argv[i];
	if (inputFileName===""){
		inputFileName=t;
		log("input file "+t)
	} else if (outputFileName===""){
		outputFileName=t;
	} else {
		log("Too many arguments. Unexpected argument \""+t+"\".");		
	}
}

if (inputFileName==="")
{
	log("need to supply input file");
}

if (outputFileName===""){
	var path = require('path');
	var globalPath = path.resolve(inputFileName)
	var parsed = path.parse(globalPath)
	parsed.ext=".json"
	parsed.dir+="/../retop"
	parsed.base=parsed.name+"_retop"+parsed.ext;
	outputFileName = path.format(parsed)
	log("outputFileName = "+outputFileName)
}

var outputFileName2=""
{
	var path = require('path');
	var globalPath = path.resolve(inputFileName)
	var parsed = path.parse(globalPath)
	parsed.ext=".json"
	parsed.dir+="/../retop"
	parsed.base=parsed.name+"_retop_big"+parsed.ext;
	outputFileName2 = path.format(parsed)
}


lib.loadFile(inputFileName)

var minarea=10000000;
var minpage=JSON.stringify(glob.page);
var maxarea=-100000;
var maxpage=JSON.stringify(glob.page);

lib.ConnectLines();
	
for (var i=0;i<100;i++){	
	var T = top.Topologize()
	top.Instantiate(T)	

	var area = lib.pageArea()
	if (area<minarea){
		minarea=area
		minpage=JSON.stringify(glob.page);
	}
	if (area>maxarea){
		maxarea=area
		maxpage=JSON.stringify(glob.page);
	}
	lib.shuffle();
}

glob.page=JSON.parse(minpage)
//log("area = "+pageArea())
lib.saveFile(outputFileName)
log("generated "+ outputFileName);
/*page=JSON.parse(maxpage)
log("area = "+pageArea())
saveFile(outputFileName2)*/
